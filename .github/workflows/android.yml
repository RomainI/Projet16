name: Android CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build, Test, and SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      # Vérifie le code source
      - name: Checkout code
        uses: actions/checkout@v4

      # Configure JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Configure Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: 33.0.3

      # Active KVM (nécessaire pour l'émulateur Android)
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install Dependencies for Emulator
        run: |
          sudo apt-get update
          sudo apt-get install -y libpulse0 libnss3 libxrandr2 libxcomposite1 libxi6 libxtst6 libxkbcommon-x11-0 libasound2    

      # Prépare l'émulateur Android
      - name: Prepare Emulator
        run: |
          sdkmanager --install "platform-tools" "emulator" "system-images;android-33;google_apis;x86_64"
          yes | sdkmanager --licenses

      # Ajoute le chemin des outils Android au PATH
      - name: Set PATH for Android Tools
        run: |
          echo "export PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

      # Vérifie si l'émulateur est installé correctement
      - name: Debug Emulator Path
        run: ls -al $ANDROID_HOME/emulator

      # Démarre l'émulateur
      - name: Start Emulator
        run: |
          export PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH
          echo "no" | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" --force
          chmod +x $ANDROID_HOME/emulator/emulator
          emulator -avd test -no-snapshot-load -noaudio -no-boot-anim -gpu swiftshader_indirect &
          adb wait-for-device
          timeout 120 sh -c "until adb shell getprop sys.boot_completed | grep -m 1 '1'; do sleep 1; done"
          echo "Emulator is ready."

      # Vérifie que l'émulateur est démarré
      - name: Check Emulator Devices
        run: adb devices

      # Accorde les permissions nécessaires à gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Décode le fichier google-services.json
      - name: Decode google-services.json
        run: |
          echo $GOOGLE_SERVICES_JSON | base64 --decode > app/google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      # Compile l'application avec Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Exécute les tests unitaires
      - name: Run Unit Tests
        run: ./gradlew test

      # Exécute les tests instrumentés
      - name: Run Instrumented Tests
        run: ./gradlew connectedCheck

      # Analyse SonarCloud
      - name: SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar

      # Arrête l'émulateur
      - name: Stop Emulator
        run: |
          adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done