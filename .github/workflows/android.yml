name: Android CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test-firebase:
    name: Build, Test on Firebase Test Lab, and SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: 33.0.3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode google-services.json
        run: |
          echo $GOOGLE_SERVICES_JSON | base64 --decode > app/google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Decode Firebase Admin SDK
        run: |
          echo $FIREBASE_AUTH_TOKEN | base64 --decode > app/firebase-adminsdk.json
        env:
          FIREBASE_AUTH_TOKEN: ${{ secrets.FIREBASE_AUTH_TOKEN }}

      - name: Set up Firebase CLI
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=app/firebase-adminsdk.json
          npx firebase setup:web

      - name: Verify Firebase Credentials File
        run: ls -l app/firebase-adminsdk.json

      - name: Set File Permissions for firebase-adminsdk.json
        run: chmod 600 app/firebase-adminsdk.json

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Run Instrumented Tests on Firebase Test Lab
        uses: firebase-actions/testing@v0
        with:
          projectId: projet16-7afde
          serviceAccount: ${{ secrets.FIREBASE_AUTH_TOKEN }}
          android-api-level: 29
          android-device-model: 'Pixel2'
          app: app/build/outputs/apk/debug/app-debug.apk
          test: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
          timeout: 5m
          directories-to-pull: /sdcard/screenshots
          environment-variables: clearPackageData=true # Optional: Clears app data between test runs

      - name: SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar

      - name: Upload APK to Firebase
        run: ./gradlew appDistributionUploadDebug
        env:
          GOOGLE_APPLICATION_CREDENTIALS: app/firebase-adminsdk.json